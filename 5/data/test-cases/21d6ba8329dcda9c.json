{"uid":"21d6ba8329dcda9c","name":"test_product_order_negative_flow","fullName":"test_e2e_order_flow#test_product_order_negative_flow","historyId":"4ad217d5f3805f506787135d17f0a9dd","time":{"start":1728996828540,"stop":1728997151359,"duration":322819},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"co-input-field js-input-field tt-input\" autocomplete=\"off\" type=\"text\" id=\"shipping_address_full_locality_name\" name=\"shipping_address[full_locality_name]\" value=\"\" spellcheck=\"false\" dir=\"auto\" style=\"position: relative; vertical-align: top; background-color: transparent;\" placeholder=\"\"> is not clickable at point (412, 42). Other element would receive the click: <div class=\"header__area-logo\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55c696d47b9a <unknown>\n#1 0x55c696a2d670 <unknown>\n#2 0x55c696a838c6 <unknown>\n#3 0x55c696a817e6 <unknown>\n#4 0x55c696a7f297 <unknown>\n#5 0x55c696a7e6a6 <unknown>\n#6 0x55c696a71ae8 <unknown>\n#7 0x55c696aa1b82 <unknown>\n#8 0x55c696a714c8 <unknown>\n#9 0x55c696aa1d4e <unknown>\n#10 0x55c696ac0dd6 <unknown>\n#11 0x55c696aa1923 <unknown>\n#12 0x55c696a6f6e7 <unknown>\n#13 0x55c696a706de <unknown>\n#14 0x55c696d1166b <unknown>\n#15 0x55c696d15611 <unknown>\n#16 0x55c696cfd4e5 <unknown>\n#17 0x55c696d16192 <unknown>\n#18 0x55c696ce26ef <unknown>\n#19 0x55c696d369d8 <unknown>\n#20 0x55c696d36ba7 <unknown>\n#21 0x55c696d469ec <unknown>\n#22 0x7fac85694ac3 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d037e21d2ff3586be7ba1f5a1e1587a6\")>\n\n    @allure.story('Негативные проверки на сложном негативном пути')\n    @pytest.mark.order(3)\n    def test_product_order_negative_flow(driver):\n        print('Негативные проверки на сложном негативном пути')\n        with allure.step('Переход на главную страницу'):\n            main_page = MainPage(driver)\n            main_page.open()\n    \n        with allure.step('Переход в корзину без покупок'):\n            main_page.open_cart_with_icon()\n    \n        with allure.step('Добавление 3х ромбов'):\n            cart_page = CartPage(driver)\n            cart_page.modify_product_quantity(action='add', product_type='ромб', quantity=3)\n    \n        with allure.step('Удаление ромбов'):\n            cart_page = CartPage(driver)\n            cart_page.modify_product_quantity(action='delete', product_type='ромб')\n    \n        with allure.step('Переход обратно в каталог'):\n            cart_page = CartPage(driver)\n            cart_page.go_back_to_catalog()\n            time.sleep(2)\n    \n        with allure.step('Добавление эллипса, переход в корзину иконкой'):\n            main_page = MainPage(driver)\n            main_page.add_ellipse_to_cart()\n            time.sleep(5)\n            main_page.open_cart_with_icon()\n            time.sleep(5)\n    \n        with allure.step('Ввод промокода, переход к оформлению заказа'):\n            cart_page = CartPage(driver)\n            cart_page.apply_promo_code('InvalidPromo')\n    \n        with allure.step('Переход на страницу оформления заказа'):\n            cart_page.assert_header_elements()\n            remembered_items = cart_page.proceed_to_checkout()\n    \n        with allure.step('Проверка отображения товаров на странице заказа'):\n            order_page = OrderPage(driver)\n            order_page.verify_cart_items(remembered_items)\n            order_page.assert_header_elements()\n    \n        with allure.step('Валидное заполнение телефона, нажатие на кнопку \"Подтвердить заказ\" '\n                         'без заполненных полей \"Населенный пункт\", \"Контактное лицо (ФИО)\"'):\n            print(\"Валидное заполнение телефона\")\n            order_page.fill_contact_phone()\n            time.sleep(5)\n            order_page.submit_order()\n            time.sleep(5)\n            if not order_page.check_redirect_to_payment():\n                print(\"Переход на следующую проверку заполнения полей.\")\n    \n        with allure.step('Заполнение только невалидного населенного пункта и повторная попытка'):\n            print(\"Заполнение невалидного населенного пункта\")\n            order_page.fill_locality_invalid()\n            time.sleep(10)\n            order_page.submit_order()\n            time.sleep(5)\n            if not order_page.check_redirect_to_payment():\n                print(\"Переход на следующую проверку заполнения полей.\")\n    \n        with allure.step('Заполнение валидного населенного пункта и повторная попытка без ФИО'):\n            print(\"Заполнение валидного населенного пункта\")\n>           order_page.fill_locality_valid()\n\ntest_e2e_order_flow.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \norder_page.py:63: in fill_locality_valid\n    self.click_element(OrderPageLocators.LOCALITY)\nbase_page.py:87: in click_element\n    element.click()\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe8238a9390>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55c696d36ba7 \\\\u003Cunknown>\\\\n#21 0x55c696d469ec \\\\u003Cunknown>\\\\n#22 0x7fac85694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"co-input-field js-input-field tt-input\" autocomplete=\"off\" type=\"text\" id=\"shipping_address_full_locality_name\" name=\"shipping_address[full_locality_name]\" value=\"\" spellcheck=\"false\" dir=\"auto\" style=\"position: relative; vertical-align: top; background-color: transparent;\" placeholder=\"\"> is not clickable at point (412, 42). Other element would receive the click: <div class=\"header__area-logo\">...</div>\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x55c696d47b9a <unknown>\nE       #1 0x55c696a2d670 <unknown>\nE       #2 0x55c696a838c6 <unknown>\nE       #3 0x55c696a817e6 <unknown>\nE       #4 0x55c696a7f297 <unknown>\nE       #5 0x55c696a7e6a6 <unknown>\nE       #6 0x55c696a71ae8 <unknown>\nE       #7 0x55c696aa1b82 <unknown>\nE       #8 0x55c696a714c8 <unknown>\nE       #9 0x55c696aa1d4e <unknown>\nE       #10 0x55c696ac0dd6 <unknown>\nE       #11 0x55c696aa1923 <unknown>\nE       #12 0x55c696a6f6e7 <unknown>\nE       #13 0x55c696a706de <unknown>\nE       #14 0x55c696d1166b <unknown>\nE       #15 0x55c696d15611 <unknown>\nE       #16 0x55c696cfd4e5 <unknown>\nE       #17 0x55c696d16192 <unknown>\nE       #18 0x55c696ce26ef <unknown>\nE       #19 0x55c696d369d8 <unknown>\nE       #20 0x55c696d36ba7 <unknown>\nE       #21 0x55c696d469ec <unknown>\nE       #22 0x7fac85694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1728996416020,"stop":1728996417214,"duration":1194},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"co-input-field js-input-field tt-input\" autocomplete=\"off\" type=\"text\" id=\"shipping_address_full_locality_name\" name=\"shipping_address[full_locality_name]\" value=\"\" spellcheck=\"false\" dir=\"auto\" style=\"position: relative; vertical-align: top; background-color: transparent;\" placeholder=\"\"> is not clickable at point (412, 42). Other element would receive the click: <div class=\"header__area-logo\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55c696d47b9a <unknown>\n#1 0x55c696a2d670 <unknown>\n#2 0x55c696a838c6 <unknown>\n#3 0x55c696a817e6 <unknown>\n#4 0x55c696a7f297 <unknown>\n#5 0x55c696a7e6a6 <unknown>\n#6 0x55c696a71ae8 <unknown>\n#7 0x55c696aa1b82 <unknown>\n#8 0x55c696a714c8 <unknown>\n#9 0x55c696aa1d4e <unknown>\n#10 0x55c696ac0dd6 <unknown>\n#11 0x55c696aa1923 <unknown>\n#12 0x55c696a6f6e7 <unknown>\n#13 0x55c696a706de <unknown>\n#14 0x55c696d1166b <unknown>\n#15 0x55c696d15611 <unknown>\n#16 0x55c696cfd4e5 <unknown>\n#17 0x55c696d16192 <unknown>\n#18 0x55c696ce26ef <unknown>\n#19 0x55c696d369d8 <unknown>\n#20 0x55c696d36ba7 <unknown>\n#21 0x55c696d469ec <unknown>\n#22 0x7fac85694ac3 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d037e21d2ff3586be7ba1f5a1e1587a6\")>\n\n    @allure.story('Негативные проверки на сложном негативном пути')\n    @pytest.mark.order(3)\n    def test_product_order_negative_flow(driver):\n        print('Негативные проверки на сложном негативном пути')\n        with allure.step('Переход на главную страницу'):\n            main_page = MainPage(driver)\n            main_page.open()\n    \n        with allure.step('Переход в корзину без покупок'):\n            main_page.open_cart_with_icon()\n    \n        with allure.step('Добавление 3х ромбов'):\n            cart_page = CartPage(driver)\n            cart_page.modify_product_quantity(action='add', product_type='ромб', quantity=3)\n    \n        with allure.step('Удаление ромбов'):\n            cart_page = CartPage(driver)\n            cart_page.modify_product_quantity(action='delete', product_type='ромб')\n    \n        with allure.step('Переход обратно в каталог'):\n            cart_page = CartPage(driver)\n            cart_page.go_back_to_catalog()\n            time.sleep(2)\n    \n        with allure.step('Добавление эллипса, переход в корзину иконкой'):\n            main_page = MainPage(driver)\n            main_page.add_ellipse_to_cart()\n            time.sleep(5)\n            main_page.open_cart_with_icon()\n            time.sleep(5)\n    \n        with allure.step('Ввод промокода, переход к оформлению заказа'):\n            cart_page = CartPage(driver)\n            cart_page.apply_promo_code('InvalidPromo')\n    \n        with allure.step('Переход на страницу оформления заказа'):\n            cart_page.assert_header_elements()\n            remembered_items = cart_page.proceed_to_checkout()\n    \n        with allure.step('Проверка отображения товаров на странице заказа'):\n            order_page = OrderPage(driver)\n            order_page.verify_cart_items(remembered_items)\n            order_page.assert_header_elements()\n    \n        with allure.step('Валидное заполнение телефона, нажатие на кнопку \"Подтвердить заказ\" '\n                         'без заполненных полей \"Населенный пункт\", \"Контактное лицо (ФИО)\"'):\n            print(\"Валидное заполнение телефона\")\n            order_page.fill_contact_phone()\n            time.sleep(5)\n            order_page.submit_order()\n            time.sleep(5)\n            if not order_page.check_redirect_to_payment():\n                print(\"Переход на следующую проверку заполнения полей.\")\n    \n        with allure.step('Заполнение только невалидного населенного пункта и повторная попытка'):\n            print(\"Заполнение невалидного населенного пункта\")\n            order_page.fill_locality_invalid()\n            time.sleep(10)\n            order_page.submit_order()\n            time.sleep(5)\n            if not order_page.check_redirect_to_payment():\n                print(\"Переход на следующую проверку заполнения полей.\")\n    \n        with allure.step('Заполнение валидного населенного пункта и повторная попытка без ФИО'):\n            print(\"Заполнение валидного населенного пункта\")\n>           order_page.fill_locality_valid()\n\ntest_e2e_order_flow.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \norder_page.py:63: in fill_locality_valid\n    self.click_element(OrderPageLocators.LOCALITY)\nbase_page.py:87: in click_element\n    element.click()\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe8238a9390>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55c696d36ba7 \\\\u003Cunknown>\\\\n#21 0x55c696d469ec \\\\u003Cunknown>\\\\n#22 0x7fac85694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"co-input-field js-input-field tt-input\" autocomplete=\"off\" type=\"text\" id=\"shipping_address_full_locality_name\" name=\"shipping_address[full_locality_name]\" value=\"\" spellcheck=\"false\" dir=\"auto\" style=\"position: relative; vertical-align: top; background-color: transparent;\" placeholder=\"\"> is not clickable at point (412, 42). Other element would receive the click: <div class=\"header__area-logo\">...</div>\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x55c696d47b9a <unknown>\nE       #1 0x55c696a2d670 <unknown>\nE       #2 0x55c696a838c6 <unknown>\nE       #3 0x55c696a817e6 <unknown>\nE       #4 0x55c696a7f297 <unknown>\nE       #5 0x55c696a7e6a6 <unknown>\nE       #6 0x55c696a71ae8 <unknown>\nE       #7 0x55c696aa1b82 <unknown>\nE       #8 0x55c696a714c8 <unknown>\nE       #9 0x55c696aa1d4e <unknown>\nE       #10 0x55c696ac0dd6 <unknown>\nE       #11 0x55c696aa1923 <unknown>\nE       #12 0x55c696a6f6e7 <unknown>\nE       #13 0x55c696a706de <unknown>\nE       #14 0x55c696d1166b <unknown>\nE       #15 0x55c696d15611 <unknown>\nE       #16 0x55c696cfd4e5 <unknown>\nE       #17 0x55c696d16192 <unknown>\nE       #18 0x55c696ce26ef <unknown>\nE       #19 0x55c696d369d8 <unknown>\nE       #20 0x55c696d36ba7 <unknown>\nE       #21 0x55c696d469ec <unknown>\nE       #22 0x7fac85694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Переход на главную страницу","time":{"start":1728996828540,"stop":1728996829626,"duration":1086},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Переход в корзину без покупок","time":{"start":1728996829626,"stop":1728996833328,"duration":3702},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Добавление 3х ромбов","time":{"start":1728996833328,"stop":1728996866402,"duration":33074},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Удаление ромбов","time":{"start":1728996866402,"stop":1728996866458,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Переход обратно в каталог","time":{"start":1728996866458,"stop":1728996869541,"duration":3083},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Добавление эллипса, переход в корзину иконкой","time":{"start":1728996869541,"stop":1728996881422,"duration":11881},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Ввод промокода, переход к оформлению заказа","time":{"start":1728996881422,"stop":1728996882387,"duration":965},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Переход на страницу оформления заказа","time":{"start":1728996882387,"stop":1728997038169,"duration":155782},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверка отображения товаров на странице заказа","time":{"start":1728997038170,"stop":1728997038232,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Валидное заполнение телефона, нажатие на кнопку \"Подтвердить заказ\" без заполненных полей \"Населенный пункт\", \"Контактное лицо (ФИО)\"","time":{"start":1728997038232,"stop":1728997081076,"duration":42844},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Заполнение только невалидного населенного пункта и повторная попытка","time":{"start":1728997081076,"stop":1728997149907,"duration":68831},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Заполнение валидного населенного пункта и повторная попытка без ФИО","time":{"start":1728997149907,"stop":1728997151358,"duration":1451},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"co-input-field js-input-field tt-input\" autocomplete=\"off\" type=\"text\" id=\"shipping_address_full_locality_name\" name=\"shipping_address[full_locality_name]\" value=\"\" spellcheck=\"false\" dir=\"auto\" style=\"position: relative; vertical-align: top; background-color: transparent;\" placeholder=\"\"> is not clickable at point (412, 42). Other element would receive the click: <div class=\"header__area-logo\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55c696d47b9a <unknown>\n#1 0x55c696a2d670 <unknown>\n#2 0x55c696a838c6 <unknown>\n#3 0x55c696a817e6 <unknown>\n#4 0x55c696a7f297 <unknown>\n#5 0x55c696a7e6a6 <unknown>\n#6 0x55c696a71ae8 <unknown>\n#7 0x55c696aa1b82 <unknown>\n#8 0x55c696a714c8 <unknown>\n#9 0x55c696aa1d4e <unknown>\n#10 0x55c696ac0dd6 <unknown>\n#11 0x55c696aa1923 <unknown>\n#12 0x55c696a6f6e7 <unknown>\n#13 0x55c696a706de <unknown>\n#14 0x55c696d1166b <unknown>\n#15 0x55c696d15611 <unknown>\n#16 0x55c696cfd4e5 <unknown>\n#17 0x55c696d16192 <unknown>\n#18 0x55c696ce26ef <unknown>\n#19 0x55c696d369d8 <unknown>\n#20 0x55c696d36ba7 <unknown>\n#21 0x55c696d469ec <unknown>\n#22 0x7fac85694ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/E2E_yookassa/E2E_yookassa/test_e2e_order_flow.py\", line 173, in test_product_order_negative_flow\n    order_page.fill_locality_valid()\n  File \"/home/runner/work/E2E_yookassa/E2E_yookassa/order_page.py\", line 63, in fill_locality_valid\n    self.click_element(OrderPageLocators.LOCALITY)\n  File \"/home/runner/work/E2E_yookassa/E2E_yookassa/base_page.py\", line 87, in click_element\n    element.click()\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"857bb5e264f0872c","name":"stdout","source":"857bb5e264f0872c.txt","type":"text/plain","size":16713}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":12,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1728997151427,"stop":1728997151533,"duration":106},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"story","value":"Негативные проверки на сложном негативном пути"},{"name":"tag","value":"order(3)"},{"name":"suite","value":"test_e2e_order_flow"},{"name":"host","value":"fv-az841-587"},{"name":"thread","value":"2241-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_e2e_order_flow"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"c4277eeb7a063ec5","reportUrl":"https://Helgi-P.github.io/E2E_yookassa/4//#testresult/c4277eeb7a063ec5","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"co-input-field js-input-field tt-input\" autocomplete=\"off\" type=\"text\" id=\"shipping_address_full_locality_name\" name=\"shipping_address[full_locality_name]\" value=\"\" spellcheck=\"false\" dir=\"auto\" style=\"position: relative; vertical-align: top; background-color: transparent;\" placeholder=\"\"> is not clickable at point (412, 42). Other element would receive the click: <div class=\"header__area-logo\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x558d63dfab9a <unknown>\n#1 0x558d63ae0670 <unknown>\n#2 0x558d63b368c6 <unknown>\n#3 0x558d63b347e6 <unknown>\n#4 0x558d63b32297 <unknown>\n#5 0x558d63b316a6 <unknown>\n#6 0x558d63b24ae8 <unknown>\n#7 0x558d63b54b82 <unknown>\n#8 0x558d63b244c8 <unknown>\n#9 0x558d63b54d4e <unknown>\n#10 0x558d63b73dd6 <unknown>\n#11 0x558d63b54923 <unknown>\n#12 0x558d63b226e7 <unknown>\n#13 0x558d63b236de <unknown>\n#14 0x558d63dc466b <unknown>\n#15 0x558d63dc8611 <unknown>\n#16 0x558d63db04e5 <unknown>\n#17 0x558d63dc9192 <unknown>\n#18 0x558d63d956ef <unknown>\n#19 0x558d63de99d8 <unknown>\n#20 0x558d63de9ba7 <unknown>\n#21 0x558d63df99ec <unknown>\n#22 0x7fd4efc94ac3 <unknown>","time":{"start":1728993824748,"stop":1728994118501,"duration":293753}}]},"tags":["order(3)"]},"source":"21d6ba8329dcda9c.json","parameterValues":[]}